addi x12, x0, 0 // mat
addi x13, x0, 64 // out
add x5, x0, x12 //mat+i
add x6, x0, x0 // val@i
addi x7, x0, 15 // max i

sd x6, 0(x5)

setup_mat:
addi x5, x5, 4
addi x6, x6, 1
sd x6, 0(x5)
blt x6, x7, setup_mat

jal x0, matrix

shift:
sll x10, x14, x15
jalr x0, 0(x8)

matrix:
add x18, x0, x0 // i
addi x19, x0, 4 // 4

i_loop:
bge x18, x19, END 
    add x13, x13, x18
    sd x0, 0(x13) // out[i] = 0
    add x20, x0, x0 // j = 0

    j_loop:
        bge x20, x19, end_of_i
        slli x6, x18, 2 // i * 4
        add x6, x6, x20 // + j
        add x14, x0, x6
        add x15, x0, x18
        jal x8, shift
        sd x10, 0(x13)
        addi x20, x20, 1
        jal x0, j_loop

end_of_i:
addi x18, x18, 1
jal x0, i_loop